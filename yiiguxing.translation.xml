<application>
  <component name="AppStorage">
    <histories>
      <item value="center Vertical" />
      <item value="head Portrait" />
      <item value="network" />
      <item value="division Head" />
      <item value="Class referenced in the layout file, androidx.cardview.widget.CardView, was not found in the project or the libraries" />
      <item value="selector another button" />
      <item value="use Qualified Module Names" />
      <item value="All files changed during 'Apply Patch' action were rolled back" />
      <item value="Push has been cancelled, because there were conflicts during update. Check that conflicts were resolved correctly, and invoke push again." />
      <item value="on Start Command" />
      <item value="set Content Title" />
      <item value="importance Reason Component" />
      <item value="Not yet implemented" />
      <item value="Return the communication channel to the service." />
      <item value="Attempt to invoke virtual method 'void android.os.CountDownTimer.cancel()' on a null object reference" />
      <item value="Only the original thread that created a view hierarchy can touch its views." />
      <item value="Alter Success" />
      <item value="Alert" />
      <item value="Alert Success" />
      <item value="true if this task is scheduled for one-time execution and has not yet run, or this task is scheduled for repeated execution. Returns false if the task was scheduled for one-time execution and has already run, or if the task was never scheduled, or if the task was already cancelled. (Loosely speaking, this method returns true if it prevents one or more scheduled executions from taking place.)" />
      <item value="type No" />
      <item value="type Count" />
      <item value="effective" />
      <item value="/** * Calls this view's OnLongClickListener, if it is defined. Invokes the * context menu if the OnLongClickListener did not consume the event, * optionally anchoring it to an (x,y) coordinate. * * @param x x coordinate of the anchoring touch event, or {@link Float#NaN} * to disable anchoring * @param y y coordinate of the anchoring touch event, or {@link Float#NaN} * to disable anchoring * @return {@code true} if one of the above receivers consumed the event, * {@code false} otherwise */" />
      <item value="commit already called" />
      <item value="Do not place Android context classes in static fields (static reference to SafetyVerifyFragment which has field context pointing to Context); this is a memory leak" />
      <item value="External" />
      <item value="Shared Preferences" />
      <item value="confirm New Password" />
      <item value="input New Password" />
      <item value="confirm" />
      <item value="ACCOUNT NO EXIST" />
      <item value="verify Right" />
      <item value="Count Down Timer" />
      <item value="The specified child already has a parent. You must call removeView() on the child's parent first." />
      <item value="Sets whether this dialog is canceled when touched outside the window's bounds. If setting to true, the dialog is set to be cancelable if not already set." />
      <item value="Sets whether this dialog is cancelable with the BACK key." />
      <item value="Schedules a commit of this transaction. The commit does not happen immediately; it will be scheduled as work on the main thread to be done the next time that thread is ready. A transaction can only be committed with this method prior to its containing activity saving its state. If the commit is attempted after that point, an exception will be thrown. This is because the state after the commit can be lost if the activity needs to be restored from its state. See commitAllowingStateLoss() for situations where it may be okay to lose the commit." />
      <item value="Like commit but allows the commit to be executed after an activity's state is saved. This is dangerous because the commit can be lost if the activity needs to later be restored from its state, so this should only be used for cases where it is okay for the UI state to change unexpectedly on the user." />
      <item value="Avoid passing null as the view root (needed to resolve layout parameters on the inflated layout's root element)" />
      <item value="attach To Root" />
      <item value="Called to have the fragment instantiate its user interface view. This is optional, and non-graphical fragments can return null. This will be called between onCreate(Bundle) and onActivityCreated(Bundle). A default View can be returned by calling Fragment(int) in your constructor. Otherwise, this method returns null. It is recommended to only inflate the layout in this method and move logic that operates on the returned View to onViewCreated(View, Bundle). If you return a View from here, you will later be called in onDestroyView when the view is being released." />
      <item value="Called immediately after onCreateView(LayoutInflater, ViewGroup, Bundle) has returned, but before any saved state has been restored in to the view. This gives subclasses a chance to initialize themselves once they know their view hierarchy has been completely created. The fragment's view hierarchy is not however attached to its parent at this point." />
      <item value="fragment safety verify" />
      <item value="fragment" />
      <item value="Transaction" />
      <item value="Fragment Transaction" />
      <item value="text Success" />
      <item value="text Verify Code" />
      <item value="text Setting" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="490" />
        <entry key="ENGLISH" value="491" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="INDONESIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>