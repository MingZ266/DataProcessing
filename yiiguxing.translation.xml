<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="420" />
    <option name="newTranslationDialogWidth" value="421" />
    <option name="newTranslationDialogX" value="221" />
    <option name="newTranslationDialogY" value="164" />
    <histories>
      <item value="android.widget.Adapter How many items are in the data set represented by this Adapter." />
      <item value="Returns a fixed-size list backed by the specified array. (Changes to the returned list &quot;write through&quot; to the array.) This method acts as bridge between array-based and collection-based APIs, in combination with Collection.toArray. The returned list is serializable and implements RandomAccess. This method also provides a convenient way to create a fixed-size list initialized to contain several elements" />
      <item value="if the add operation is not supported by this list" />
      <item value="if the underlying data collection is immutable" />
      <item value="Spinner adapter view type count must be 1" />
      <item value="Control whether methods that change the list (add, addAll(Collection), addAll(Object[]), insert, remove, clear, sort(Comparator)) automatically call notifyDataSetChanged. If set to false, caller must manually call notifyDataSetChanged() to have the changes reflected in the attached view. The default is true, and calling notifyDataSetChanged() resets the flag to true." />
      <item value="Indicates whether or not {@link notifyDataSetChanged()} must be called whenever {@link mObjects} is modified." />
      <item value="Returns a read-only Set of all keys in this map." />
      <item value="Adds all of the elements of the specified collection to the end of this list. The elements are appended in the order they appear in the elements collection." />
      <item value="Returns a new map containing all key-value pairs matching the given predicate. The returned map preserves the entry iteration order of the original map." />
      <item value="whole" />
      <item value="plurals" />
      <item value="There should be at least one quantity string in this &lt;plural&gt; definition" />
      <item value="Returns a list containing only elements matching the given predicate." />
      <item value="Extended Adapter that is the bridge between a Spinner and its data. A spinner adapter allows to define two different views: one that shows the data in the spinner itself and one that shows the data in the drop down list when the spinner is pressed." />
      <item value="Sets the SpinnerAdapter used to provide the data which backs this Spinner. If this Spinner has a popup theme set in XML via the popupTheme attribute, the adapter should inflate drop-down views using the same theme. The easiest way to achieve this is by using getPopupContext() to obtain a layout inflater for use in SpinnerAdapter.getDropDownView(int, View, ViewGroup). Spinner overrides Adapter.getViewTypeCount() on the Adapter associated with this view. Calling getItemViewType(int) on the object returned from getAdapter() will always return 0. Calling getViewTypeCount() will always return 1. On API Build.VERSION_CODES.LOLLIPOP and above, attempting to set an adapter with more than one view type will throw an IllegalArgumentException." />
      <item value="Don't include android.R here; use a fully qualified name for each usage instead" />
      <item value="Constructor" />
      <item value="if the specified collection contains one or more null elements and this list does not permit null elements, or if the specified collection is null" />
      <item value="if the class of an element of the specified collection prevents it from being added to this list" />
      <item value="if the addAll operation is not supported by this list" />
      <item value="The Collection to add at the end of the array." />
      <item value="Adds the specified Collection at the end of the array." />
      <item value="Remove all elements from the list." />
      <item value="Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself." />
      <item value="Assigning Locale.getDefault() to a final static field is suspicious; this code will not work correctly if the user changes locale while the app is running" />
      <item value="Static Field Leak" />
      <item value="Not yet implemented" />
      <item value="An overriding function is not allowed to specify default values for its parameters" />
      <item value="Returns an Observable that mirrors the current Observable, but notifies observers of a TimeoutException if an item emitted by the current Observable doesn't arrive within a window of time after the emission of the previous item, where that period of time is measured by an ObservableSource that is a function of the previous item." />
      <item value="item Timeout Indicator" />
      <item value="Only classes are allowed on the left hand side of a class literal" />
      <item value="Toast" />
      <item value="over Request" />
      <item value="EDITABLE" />
      <item value="Text that will be used as a URI. Corresponds to {@link android.text.InputTypeTYPE_CLASS_TEXT} | {@link android.text.InputTypeTYPE_TEXT_VARIATION_URI}." />
      <item value="can't call onError because no way to know if a Disposable has been set or not can't call onSubscribe because the call might have set a Subscription already" />
      <item value="login time" />
      <item value="Constant" />
      <item value="Controls whether a view can take focus. By default, this is &quot;auto&quot; which lets the framework determine whether a user can move focus to a view. By setting this attribute to true the view is allowed to take focus. By setting it to &quot;false&quot; the view will not take focus. This value does not impact the behavior of directly calling {@link android.view.ViewrequestFocus}, which will always request focus regardless of this view. It only impacts where focus navigation will try to move focus." />
      <item value="A numeric only field. Corresponds to {@link android.text.InputTypeTYPE_CLASS_NUMBER} | {@link android.text.InputTypeTYPE_NUMBER_VARIATION_NORMAL}." />
      <item value="Text that is for phonetic pronunciation, such as a phonetic name field in a contact entry. Corresponds to {@link android.text.InputTypeTYPE_CLASS_TEXT} | {@link android.text.InputTypeTYPE_TEXT_VARIATION_PHONETIC}." />
      <item value="tel" />
      <item value="Describes the content of a view so that a autofill service can fill in the appropriate data. Multiple hints can be combined in a comma separated list or an array of strings to mean e.g. emailAddress or postalAddress." />
      <item value="Base application theme." />
      <item value="focus" />
      <item value="Entry name 'classes.dex' collided" />
      <item value="A failure occurred while executing com.android.build.gradle.tasks.PackageAndroidArtifactIncrementalSplitterRunnable" />
      <item value="Flag indicating whether this Window is responsible for drawing the background for the system bars. If true and the window is not floating, the system bars are drawn with a transparent background and the corresponding areas in this window are filled with the colors specified in {@link android.R.attrstatusBarColor} and {@link android.R.attrnavigationBarColor}. Corresponds to {@link android.view.WindowManager.LayoutParamsFLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS}." />
      <item value="Flag indicating whether this Window is responsible for drawing the background for the system bars. If true and the window is not floating, the system bars are drawn with a transparent background and the corresponding areas in this window are filled with the colors specified in {@link android.R.attrstatusBarColor} and {@link android.R.attrnavigationBarColor}. Corresponds to {@link android.view.WindowManager.LayoutParamsFLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS}" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1291" />
        <entry key="ENGLISH" value="1292" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="8" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="3" />
        <entry key="SLOVAK" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1625981092706" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>