<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="420" />
    <option name="newTranslationDialogWidth" value="797" />
    <option name="newTranslationDialogX" value="221" />
    <option name="newTranslationDialogY" value="164" />
    <histories>
      <item value="Alter Password" />
      <item value="start Polling Alarm" />
      <item value="start Pull Alarm" />
      <item value="pending Intent" />
      <item value="set Only Alert Once" />
      <item value="filter" />
      <item value="STICKY" />
      <item value="START NOT STICKY" />
      <item value="Whether to allow the application to participate in the backup and restore infrastructure. If this attribute is set to false, no backup or restore of the application will ever be performed, even by a full-system backup that would otherwise cause all application data to be saved via adb. The default value of this attribute is true." />
      <item value="Alarm Receiver" />
      <item value="IN TIME" />
      <item value="PULL MESSAGE" />
      <item value="PULL MESSAGE IN TIME" />
      <item value="PUSH MESSAGE IN TIME" />
      <item value="Specify a specific process that the associated code is to run in. Use with the application tag (to supply a default process for all application components), or with the activity, receiver, service, or provider tag (to supply a specific icon for that component). Application components are normally run in a single process that is created for the entire application. You can use this tag to modify where they run. If the process name begins with a ':' character, a new process private to that application will be created when needed to run that component (allowing you to spread your application across multiple processes). If the process name begins with a lower-case character, the component will be run in a global process of that name, provided that you have permission to do so, allowing multiple applications to share one process to reduce resource usage." />
      <item value="BOOT COMPLETED" />
      <item value="Alarm Manager just ran" />
      <item value="This broadcast receiver declares an intent-filter for a protected broadcast action string, which can only be sent by the system, not third-party applications. However, the receiver's onReceive method does not appear to call getAction to ensure that the received Intent's action string matches the expected value, potentially making it possible for another actor to send a spoofed intent with no action string or a different action string and cause undesired behavior." />
      <item value="On SDK version 23 and up, your app data will be automatically backed up and restored on app install. Consider adding the attribute android:fullBackupContent to specify an @xml resource which configures which files to backup. More info: https:developer.android.comtrainingbackupautosyncapi.html" />
      <item value="RECEIVE BOOT COMPLETED" />
      <item value="The name of an action that is handled, using the Java-style naming convention. For example, to support {@link android.content.IntentACTION_VIEW Intent.ACTION_VIEW} you would put android.intent.action.VIEW here. Custom actions should generally use a prefix matching the package name." />
      <item value="Indicate if this component is aware of direct boot lifecycle, and can be safely run before the user has entered their credentials (such as a lock pattern or PIN)." />
      <item value="must not be 0." />
      <item value="Background start not allowed" />
      <item value="Specify a permission that a client is required to have in order to use the associated object. If the client does not hold the named permission, its request will fail. See the Security and Permissions document for more information on permissions." />
      <item value="Flag indicating whether the given application component is available to other applications. If false, it can only be accessed by applications with its same user id (which usually means only by code in its own package). If true, it can be invoked by external entities, though which ones can do so may be controlled through permissions. The default value is false for activity, receiver, and service components that do not specify any intent filters; it is true for activity, receiver, and service components that do have intent filters (implying they expect to be invoked by others who do not know their particular component name) and for all content providers." />
      <item value="Receiver" />
      <item value="Unsupported Operation Exception" />
      <item value="Not yet implemented" />
      <item value="Return the communication channel to the service." />
      <item value="Diverse Notify Activity" />
      <item value="Formats: flags Values: colorMode, density, fontScale, keyboard, keyboardHidden, layoutDirection, locale, mcc, mnc, navigation, orientation, screenLayout, screenSize, smallestScreenSize, touchscreen, uiMode Specify one or more configuration changes that the activity will handle itself. If not specified, the activity will be restarted if any of these configuration changes happen in the system. Otherwise, the activity will remain running and its {@link android.app.ActivityonConfigurationChanged Activity.onConfigurationChanged} method called with the new configuration. Note that all of these configuration changes can impact the resource values seen by the application, so you will generally need to re-retrieve all resources (including view layouts, drawables, etc) to correctly handle any configuration change. These values must be kept in sync with those in {@link android.content.pm.ActivityInfo} and includeutilsResourceTypes.h." />
      <item value="The screen orientation has changed, that is the user has rotated the device." />
      <item value="Formats: enum Values: behind, fullSensor, fullUser, landscape, locked, nosensor, portrait, reverseLandscape, reversePortrait, sensor, sensorLandscape, sensorPortrait, unspecified, user, userLandscape, userPortrait Specify the orientation an activity should be run in. If not specified, it will run in the current preferred orientation of the screen. This attribute is supported by the {@code } element." />
      <item value="Would like to have the screen in a portrait orientation: that is, with the display taller than it is wide, ignoring sensor data. Corresponds to {@link android.content.pm.ActivityInfoSCREEN_ORIENTATION_PORTRAIT}." />
      <item value="a positive integer representing the position of the view in the group, or -1 if the view does not exist in the group" />
      <item value="No such file or directory" />
      <item value="finish On Over" />
      <item value="is your activity running" />
      <item value="Activity com.tdsata.ourapp.activity.ActivitySignInScan has leaked window DecorView@9816ada[ActivitySignInScan] that was originally added here" />
      <item value="status Describe" />
      <item value="This class implements Parcelable but does not provide a CREATOR field" />
      <item value="synchronize Sign In Status Info" />
      <item value="blank" />
      <item value="sign In Not Start" />
      <item value="sing In Not Start" />
      <item value="Progress" />
      <item value="Process" />
      <item value="Resume" />
      <item value="on Resume" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="801" />
        <entry key="ENGLISH" value="802" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612321880443" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>