<application>
  <component name="AppStorage">
    <histories>
      <item value="This can only be used in conjunction with FLAG_ACTIVITY_NEW_TASK." />
      <item value="If set, this activity will become the start of a new task on this history stack. A task (from the activity that started it to the next task activity) defines an atomic group of activities that the user can move to. Tasks can be moved to the foreground and background; all of the activities inside of a particular task always remain in the same order. See Tasks and Back Stack for more information about tasks. This flag is generally used by activities that want to present a &quot;launcher&quot; style behavior: they give the user a list of separate things that can be done, which otherwise run completely independently of the activity launching them. When using this flag, if a task is already running for the activity you are now starting, then a new activity will not be started; instead, the current task will simply be brought to the front of the screen with the state it was last in. See FLAG_ACTIVITY_MULTIPLE_TASK for a flag to disable this behavior. This flag can not be used when the caller is requesting a result from the activity being launched." />
      <item value="FLAG ACTIVITY NEW TASK" />
      <item value="MULTIPLE" />
      <item value="MULTIPLE_" />
      <item value="If set in an Intent passed to Context.startActivity(), this flag will cause any existing task that would be associated with the activity to be cleared before the activity is started. That is, the activity becomes the new root of an otherwise empty task, and any old activities are finished. This can only be used in conjunction with FLAG_ACTIVITY_NEW_TASK." />
      <item value="This flag is used to create a new task and launch an activity into it. This flag is always paired with either FLAG_ACTIVITY_NEW_DOCUMENT or FLAG_ACTIVITY_NEW_TASK. In both cases these flags alone would search through existing tasks for ones matching this Intent. Only if no such task is found would a new task be created. When paired with FLAG_ACTIVITY_MULTIPLE_TASK both of these behaviors are modified to skip the search for a matching task and unconditionally start a new task. When used with FLAG_ACTIVITY_NEW_TASK do not use this flag unless you are implementing your own top-level application launcher. Used in conjunction with FLAG_ACTIVITY_NEW_TASK to disable the behavior of bringing an existing task to the foreground. When set, a new task is always started to host the Activity for the Intent, regardless of whether there is already an existing task running the same thing. Because the default system does not include graphical task management, you should not use this flag unless you provide some way for a user to return back to the tasks you have launched. See FLAG_ACTIVITY_NEW_DOCUMENT for details of this flag's use for creating new document tasks. This flag is ignored if one of FLAG_ACTIVITY_NEW_TASK or FLAG_ACTIVITY_NEW_DOCUMENT is not also set." />
      <item value="FLAG ACTIVITY MULTIPLE TASK" />
      <item value="FLAG ACTIVITY CLEAR TASK" />
      <item value="no Trying" />
      <item value="try Connection" />
      <item value="Launch a new activity. You will not receive any information about when the activity exits. This implementation overrides the base version, providing information about the activity performing the launch. Because of this additional information, the Intent.FLAG_ACTIVITY_NEW_TASK launch flag is not required; if not specified, the new activity will be added to the task of the caller. This method throws android.content.ActivityNotFoundException if there was no Activity found to run the given Intent." />
      <item value="Same as startActivities(Intent[], Bundle) with no options specified." />
      <item value="manual Login" />
      <item value="Exception 'java.util.MissingFormatArgumentException' has already been caught" />
      <item value="if this enum type has no constant with the specified name" />
      <item value="Illegal Block Size Exception" />
      <item value="last block incomplete in decryption" />
      <item value="Cancel the dialog. This is essentially the same as calling dismiss(), but it will also call your DialogInterface.OnCancelListener (if registered)." />
      <item value="Dismiss this dialog, removing it from the screen. This method can be invoked safely from any thread. Note that you should not override this method to do cleanup when the dialog is dismissed, instead implement that in onStop." />
      <item value="overlap Anchor" />
      <item value="login End" />
      <item value="end Login" />
      <item value="endlogin" />
      <item value="logging Over" />
      <item value="over Login" />
      <item value="set Login Status And Message" />
      <item value="logging In" />
      <item value="do Thing If No Timeout" />
      <item value="do Thing If Fail" />
      <item value="do Thing If Success" />
      <item value="do Thing On Success" />
      <item value="do Thing" />
      <item value="Polling" />
      <item value="Timer Polling" />
      <item value="first Login" />
      <item value="not First Login" />
      <item value="Account NOT EXIST" />
      <item value="get Keccak Encrypt" />
      <item value="Assign your dependency to a configuration by selecting one of the configurations below." />
      <item value="Provide a path to the library file or directory to add." />
      <item value="Show in Project Structure dialog" />
      <item value="Failed to resolve" />
      <item value="Affected Modules" />
      <item value="Create an ActivityOptions to transition between Activities using cross-Activity scene animations. This method carries the position of multiple shared elements to the started Activity. The position of the first element in sharedElements will be used as the epicenter for the exit Transition. The position of the associated shared element in the launched Activity will be the epicenter of its entering Transition. This requires Window.FEATURE_ACTIVITY_TRANSITIONS to be enabled on the calling Activity to cause an exit transition. The same must be in the called Activity to get an entering transition." />
      <item value="use Qualified Module Names" />
      <item value="Returns milliseconds since boot, including time spent in sleep." />
      <item value="Fixed Value" />
      <item value="period" />
      <item value="poll Time" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="396" />
        <entry key="ENGLISH" value="396" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="4" />
        <entry key="BENGALI" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="INDONESIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>