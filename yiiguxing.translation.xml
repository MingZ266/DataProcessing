<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="420" />
    <option name="newTranslationDialogWidth" value="757" />
    <option name="newTranslationDialogX" value="221" />
    <option name="newTranslationDialogY" value="164" />
    <histories>
      <item value="Color Changeable Icon" />
      <item value="to Color Changeable" />
      <item value="Color Changeable Image View" />
      <item value="end Is Refreshing" />
      <item value="end Refreshing" />
      <item value="tip Text When End Refresh" />
      <item value="tip Text When End The Refresh" />
      <item value="assert Equals" />
      <item value="rear" />
      <item value="tip Text On Refresh Success" />
      <item value="tip Text When Refresh Success" />
      <item value="tip Text When Over Refresh" />
      <item value="water Wave Bottom Offset" />
      <item value="is Refresh" />
      <item value="is Refreshing" />
      <item value="tip Text For Refresh" />
      <item value="tip Text For Drop Down" />
      <item value="tip Text On Refreshing" />
      <item value="tip Text On Drop Down" />
      <item value="tip Text On Down Pull" />
      <item value="tip Text On Down" />
      <item value="tip Text Before Refresh" />
      <item value="refresh Limit Scale" />
      <item value="Water Wave Refresh Layout" />
      <item value="twenty" />
      <item value="Calling this with the present values causes it to re-claim them" />
      <item value="clamp" />
      <item value="is Down Scroll" />
      <item value="Clickable View Accessibility" />
      <item value="get Scroll Indicators" />
      <item value="desired Height" />
      <item value="Constraint Layout" />
      <item value="set Divider Drawable" />
      <item value="LOLLIPOP" />
      <item value="The relative proportion of vertical space that should be allocated to this view during excess space distribution." />
      <item value="The row boundary delimiting the top of the group of cells occupied by this view." />
      <item value="Attribute layout_columnWeight is only used in API level 21 and higher (current min is 19)" />
      <item value="Unused Attribute" />
      <item value="A layout that places its children in a rectangular grid. The grid is composed of a set of infinitely thin lines that separate the viewing area into cells. Throughout the API, grid lines are referenced by grid indices. A grid with N columns has N + 1 grid indices that run from 0 through N inclusive. Regardless of how GridLayout is configured, grid index 0 is fixed to the leading edge of the container and grid index N is fixed to its trailing edge (after padding is taken into account). Row and Column Specs Children occupy one or more contiguous cells, as defined by their rowSpec and columnSpec layout parameters. Each spec defines the set of rows or columns that are to be occupied; and how children should be aligned within the resulting group of cells. Although cells do not normally overlap in a GridLayout, GridLayout does not prevent children being defined to occupy the same cell or group of cells. In this case however, there is no guarantee that children will not themselves overlap after the layout operation completes. Default Cell Assignment If a child does not specify the row and column indices of the cell it wishes to occupy, GridLayout assigns cell locations automatically using its: orientation, rowCount and columnCount properties. Space Space between children may be specified either by using instances of the dedicated Space view or by setting the leftMargin, topMargin, rightMargin and bottomMargin layout parameters. When the useDefaultMargins property is set, default margins around children are automatically allocated based on the prevailing UI style guide for the platform. Each of the margins so defined may be independently overridden by an assignment to the appropriate layout parameter. Default values will generally produce a reasonable spacing between components but values may change between different releases of the platform. Excess Space Distribution As of API 21, GridLayout's distribution of excess space accomodates the principle of weight. In the event that no weights are specified, the previous conventions are respected and columns and rows are taken as flexible if their views specify some form of alignment within their groups. The flexibility of a view is therefore influenced by its alignment which is, in turn, typically defined by setting the gravity property of the child's layout parameters. If either a weight or alignment were defined along a given axis then the component is taken as flexible in that direction. If no weight or alignment was set, the component is instead assumed to be inflexible. Multiple components in the same row or column group are considered to act in parallel. Such a group is flexible only if all of the components within it are flexible. Row and column groups that sit either side of a common boundary are instead considered to act in series. The composite group made of these two elements is flexible if one of its elements is flexible. To make a column stretch, make sure all of the components inside it define a weight or a gravity. To prevent a column from stretching, ensure that one of the components in the column does not define a weight or a gravity. When the principle of flexibility does not provide complete disambiguation, GridLayout's algorithms favour rows and columns that are closer to its right and bottom edges. To be more precise, GridLayout treats each of its layout parameters as a constraint in the a set of variables that define the grid-lines along a given axis. During layout, GridLayout solves the constraints so as to return the unique solution to those constraints for which all variables are less-than-or-equal-to the corresponding value in any other valid solution. Interpretation of GONE For layout purposes, GridLayout treats views whose visibility status is GONE, as having zero width and height. This is subtly different from the policy of ignoring views that are marked as GONE outright. If, for example, a gone-marked view was alone in a column, that column would itself collapse to zero width if and only if no gravity was defined on the view. If gravity was defined, then the gone-marked view has no effect on the layout and the container should be laid out as if the view had never been added to it. GONE views are taken to have zero weight during excess space distribution. These statements apply equally to rows as well as columns, and to groups of rows or columns. See GridLayout.LayoutParams for a full description of the layout parameters used by GridLayout." />
      <item value="Venn Diagram" />
      <item value="文氏图" />
      <item value="If true, it will be iconified when not in use and expanded when clicked" />
      <item value="request" />
      <item value="get Observer Time" />
      <item value="Scale" />
      <item value="get Atmospheric Pressure" />
      <item value="get Air Pressure" />
      <item value="get Pressure" />
      <item value="get Dew Point Temperature" />
      <item value="get Cloudiness" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="929" />
        <entry key="ENGLISH" value="930" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="8" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615032156254" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>