<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="420" />
    <option name="newTranslationDialogWidth" value="403" />
    <option name="newTranslationDialogX" value="221" />
    <option name="newTranslationDialogY" value="164" />
    <histories>
      <item value="条形码" />
      <item value="check Task Over" />
      <item value="This is an internal kotlinx.coroutines API that should not be used from outside of kotlinx.coroutines. No compatibility guarantees are provided.It is recommended to report your use-case of internal API to kotlinx.coroutines issue tracker, so stable API could be provided instead" />
      <item value="You specify which Scheduler this operator will use. &quot;Island size&quot; indicates how large chunks the unbounded buffer allocates to store the excess elements waiting to be consumed on the other side of the asynchronous boundary." />
      <item value="This operator keeps emitting as many signals as it can on the given Scheduler's worker thread, which may result in a longer than expected occupation of this thread. In other terms, it does not allow per-signal fairness in case the worker runs on a shared underlying thread. If such fairness and signalwork interleaving is preferred, use the delay operator with zero time instead." />
      <item value="Returns an Observable to perform the current Observable's emissions and notifications on a specified Scheduler, asynchronously with an unbounded buffer with Flowable.bufferSize() &quot;island size&quot;. Note that onError notifications will cut ahead of onNext notifications on the emission thread if Scheduler is truly asynchronous. If strict event ordering is required, consider using the observeOn(Scheduler, boolean) overload." />
      <item value="Return an Observable that schedules the downstream Observers' dispose calls aimed at the current Observable on the given Scheduler." />
      <item value="Accidental override: The following declarations have the same JVM signature (getTaskId()I):" />
      <item value="submits" />
      <item value="Defines whether the vertical scrollbar track should always be drawn." />
      <item value="Hints the Android System whether the view node associated with this View should be included in a view structure used for autofill purposes." />
      <item value="When set to false, prevents the layout from aligning its children's baselines. This attribute is particularly useful when the children use different values for gravity. The default value is true." />
      <item value="No Submit" />
      <item value="lateinit' modifier is not allowed on properties of primitive types" />
      <item value="Platform declaration clash: The following declarations have the same JVM signature (requestSuccess(LjavautilList;)V):" />
      <item value="作业" />
      <item value="A view that displays one child at a time and lets the user pick among them. The items in the Spinner come from the Adapter associated with this view. See the Spinners guide." />
      <item value="android.widget.Adapter How many items are in the data set represented by this Adapter." />
      <item value="Returns a fixed-size list backed by the specified array. (Changes to the returned list &quot;write through&quot; to the array.) This method acts as bridge between array-based and collection-based APIs, in combination with Collection.toArray. The returned list is serializable and implements RandomAccess. This method also provides a convenient way to create a fixed-size list initialized to contain several elements" />
      <item value="if the add operation is not supported by this list" />
      <item value="if the underlying data collection is immutable" />
      <item value="Spinner adapter view type count must be 1" />
      <item value="Control whether methods that change the list (add, addAll(Collection), addAll(Object[]), insert, remove, clear, sort(Comparator)) automatically call notifyDataSetChanged. If set to false, caller must manually call notifyDataSetChanged() to have the changes reflected in the attached view. The default is true, and calling notifyDataSetChanged() resets the flag to true." />
      <item value="Indicates whether or not {@link notifyDataSetChanged()} must be called whenever {@link mObjects} is modified." />
      <item value="Returns a read-only Set of all keys in this map." />
      <item value="Adds all of the elements of the specified collection to the end of this list. The elements are appended in the order they appear in the elements collection." />
      <item value="Returns a new map containing all key-value pairs matching the given predicate. The returned map preserves the entry iteration order of the original map." />
      <item value="whole" />
      <item value="plurals" />
      <item value="There should be at least one quantity string in this &lt;plural&gt; definition" />
      <item value="Returns a list containing only elements matching the given predicate." />
      <item value="Extended Adapter that is the bridge between a Spinner and its data. A spinner adapter allows to define two different views: one that shows the data in the spinner itself and one that shows the data in the drop down list when the spinner is pressed." />
      <item value="Sets the SpinnerAdapter used to provide the data which backs this Spinner. If this Spinner has a popup theme set in XML via the popupTheme attribute, the adapter should inflate drop-down views using the same theme. The easiest way to achieve this is by using getPopupContext() to obtain a layout inflater for use in SpinnerAdapter.getDropDownView(int, View, ViewGroup). Spinner overrides Adapter.getViewTypeCount() on the Adapter associated with this view. Calling getItemViewType(int) on the object returned from getAdapter() will always return 0. Calling getViewTypeCount() will always return 1. On API Build.VERSION_CODES.LOLLIPOP and above, attempting to set an adapter with more than one view type will throw an IllegalArgumentException." />
      <item value="Don't include android.R here; use a fully qualified name for each usage instead" />
      <item value="Constructor" />
      <item value="if the specified collection contains one or more null elements and this list does not permit null elements, or if the specified collection is null" />
      <item value="if the class of an element of the specified collection prevents it from being added to this list" />
      <item value="if the addAll operation is not supported by this list" />
      <item value="The Collection to add at the end of the array." />
      <item value="Adds the specified Collection at the end of the array." />
      <item value="Remove all elements from the list." />
      <item value="Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself." />
      <item value="Assigning Locale.getDefault() to a final static field is suspicious; this code will not work correctly if the user changes locale while the app is running" />
      <item value="Static Field Leak" />
      <item value="Not yet implemented" />
      <item value="An overriding function is not allowed to specify default values for its parameters" />
      <item value="Returns an Observable that mirrors the current Observable, but notifies observers of a TimeoutException if an item emitted by the current Observable doesn't arrive within a window of time after the emission of the previous item, where that period of time is measured by an ObservableSource that is a function of the previous item." />
      <item value="item Timeout Indicator" />
      <item value="Only classes are allowed on the left hand side of a class literal" />
      <item value="Toast" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1295" />
        <entry key="ENGLISH" value="1295" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="8" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="3" />
        <entry key="SLOVAK" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1625981092706" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>