<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="420" />
    <option name="newTranslationDialogWidth" value="367" />
    <option name="newTranslationDialogX" value="221" />
    <option name="newTranslationDialogY" value="164" />
    <histories>
      <item value="NOTE: Do not place your application dependencies here; they belong in the individual module build.gradle files" />
      <item value="may be corrupted." />
      <item value="finalize" />
      <item value="Cannot initialize return object of type 'jint' (aka 'int') with an rvalue of type 'jstring' (aka '_jstring ')" />
      <item value="cannot initialize return object of type 'jint' (aka 'int') with an rvalue of type 'jstring' (aka '_jstring ')" />
      <item value="Specifies the target library." />
      <item value="android:statusBarColor has already been defined in this &lt;style&gt; (Previously defined here)" />
      <item value="android:statusBarColor has already been defined in this &lt;style&gt;" />
      <item value="Links the target library to the log library included in the NDK." />
      <item value="Specifies libraries CMake should link to your target library. You can link multiple libraries, such as libraries you define in this build script, prebuilt third-party libraries, or system libraries." />
      <item value="Searches for a specified prebuilt library and stores the path as a variable. Because CMake includes system libraries in the search path by default, you only need to specify the name of the public NDK library you want to add. CMake verifies that the library exists before completing its build." />
      <item value="Specifies the name of the NDK library that you want CMake to locate." />
      <item value="Sets the name of the path variable." />
      <item value="Sets the name of the library." />
      <item value="Provides a relative path to your source file(s)." />
      <item value="Sets the library as a shared library." />
      <item value="Creates and names a library, sets it as either STATIC or SHARED, and provides the relative paths to its source code. You can define multiple libraries, and CMake builds them for you. Gradle automatically packages shared libraries with your APK." />
      <item value="Declares and names the project." />
      <item value="For more information about using CMake with Android Studio, read the documentation: https:d.android.comstudioprojectsadd-native-code.html Sets the minimum version of CMake required to build the native library." />
      <item value="Context of the app under test." />
      <item value="dlopen failed: library &quot;systemliblibopencv_java4.so&quot; needed or dlopened by &quot;systemliblibnativeloader.so&quot; is not accessible for the namespace &quot;classloader-namespace&quot;" />
      <item value="bad ELF magic" />
      <item value="release" />
      <item value="constructor" />
      <item value="fingerprint" />
      <item value="The default CoroutineDispatcher that is used by all standard builders like launch, async, etc if no dispatcher nor any other ContinuationInterceptor is specified in their context. It is backed by a shared pool of threads on JVM. By default, the maximal level of parallelism used by this dispatcher is equal to the number of CPU cores, but is at least two. Level of parallelism X guarantees that no more than X tasks can be executed in this dispatcher in parallel." />
      <item value="failed to get memory consumption info: -1" />
      <item value="Couldn't load memtrack module" />
      <item value="Checksum mismatch for dex base.apk!classes2.dex" />
      <item value="Only the original thread that created a view hierarchy can touch its views." />
      <item value="readLoop mReadIndex finish" />
      <item value="set Fan Mode" />
      <item value="sensor paper out" />
      <item value="Capturer" />
      <item value="uevent_next_event nr:1" />
      <item value="Build fingerprint: 'HuagoScanrk3288rk3288:8.1.0OPM8.181205.001095200:userdebugtest-keys'" />
      <item value="SEGV MAPERR" />
      <item value="SIGSEGV" />
      <item value="Fatal signal 11 (SIGSEGV), code 1, fault addr 0x84380000 in tid 3635 (pool-2-thread-1), pid 3537 (ple.scanningapp)" />
      <item value="stack Top" />
      <item value="stack Trace" />
      <item value="The (optional) fully-qualified name for a subclass of {@link android.app.Application} that the system instantiates before any other class when an app's process starts. Most applications don't need this attribute. If it's not specified, the system instantiates the base Application class instead." />
      <item value="Const 'val' has type 'FileLog.Companion.CrashThrowable'. Only primitives and String are allowed" />
      <item value="Do not place Android context classes in static fields (static reference to FileLog which has field context pointing to Context); this is a memory leak" />
      <item value="Decode Runnable" />
      <item value="Proceed in 3 steps: 1. If fewer than corePoolSize threads are running, try to start a new thread with the given command as its first task. The call to addWorker atomically checks runState and workerCount, and so prevents false alarms that would add threads when it shouldn't, by returning false. 2. If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method. So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none. 3. If we cannot queue task, then we try to add a new thread. If it fails, we know we are shut down or saturated and so reject the task." />
      <item value="single Thread Pool" />
      <item value="Finalizable Delegated Executor Service" />
      <item value="hook for ScheduledThreadPoolExecutor" />
      <item value="interrupt Idle Workers" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1354" />
        <entry key="ENGLISH" value="1355" />
        <entry key="ICELANDIC" value="1" />
        <entry key="DANISH" value="3" />
        <entry key="GERMAN" value="8" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MALAYALAM" value="1" />
        <entry key="BENGALI" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="3" />
        <entry key="SLOVAK" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="5" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1626413195815" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200918000568375" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="2f2d5e6a9f7e1244" />
      </youdao-translate>
    </option>
  </component>
</application>